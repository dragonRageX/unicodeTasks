//GITHUB USERNAME: dragonRageX
const submitButton = document.querySelector(".submit-button");
// function getDetailsAndValidate()
// {
    const firstName = document.getElementById("first-name");
    const lastName = document.getElementById("last-name");
    const contactNum = document.getElementById("contact-num");
    // if(parseFloat(firstName.value) !== NaN || firstName.value == "")  //typeOf()
    // {
    //     const firstNameError = document.getElementById("first-name-error");   //CREATE A HTML TAG NAMED ERROR (SAME AS NOW) WHICH WILL HAVE A display: none TYPE AND ACCESS THIS TAG INSIDE JS WITH THE HELP OF classList.toggle("show") AND PUT THIS toggle METHOD INSIDE THE if STATEMENTS ONLY.
    //     firstNameError.innerHTML = "Enter a string First Name!";
    // }
    // else if(parseFloat(lastName.value) !== NaN || lastName.value == "")   //THE trim() METHOD ESSENTIALLY DELETES ALL THE LEADING WHITE SPACES GENERATED BY THE USER.
    // {
    //     const lastNameError = document.getElementById("last-name-error");   //ADD A SEPARATE EVENT LISTENER FOR EACH INPUT FIELD WITH THE EVENT: "keyup". <form action = "" method = "">.
    //     lastNameError.innerHTML = "Enter a string Last Name!";
    // }
    // else if(parseFloat(contactNum.value) == NaN || contactNum.value.length != 10)
    // {
    //     const contactNumError = document.getElementById("contact-num-error");
    //     contactNumError.innerHTML = "Enter integers for your Contact Number!";
    // }
let i = 0;

while(i !== 1)
{
    function validateFirstName()
    {
        if(!(isNaN(firstName.value)) || firstName.value == "")  //typeOf()
        {
            const firstNameError = document.getElementById("first-name-error");   //CREATE A HTML TAG NAMED ERROR (SAME AS NOW) WHICH WILL HAVE A display: none TYPE AND ACCESS THIS TAG INSIDE JS WITH THE HELP OF classList.toggle("show") AND PUT THIS toggle METHOD INSIDE THE if STATEMENTS ONLY.
            function createBubble()
            {
                firstNameError.innerHTML = "Enter a string First Name!";
            }
            setTimeout(createBubble, 150);
            function deleteBubble()
            {
                firstNameError.style.display = "none";
            }
            setTimeout(deleteBubble, 5000);
        }
        i = -1;
    }
    firstName.addEventListener("keyup", validateFirstName);

    function validateLastName()
    {
        if(!(isNaN(lastName.value)) || lastName.value == "")   //THE trim() METHOD ESSENTIALLY DELETES ALL THE LEADING WHITE SPACES GENERATED BY THE USER.
        {
            const lastNameError = document.getElementById("last-name-error");
            function createBubble()
            {
                lastNameError.innerHTML = "Enter a string Last Name!";
            }
            setTimeout(createBubble, 150);
            function deleteBubble()
            {
                lastNameError.style.display = "none";
            }
            setTimeout(deleteBubble, 5000);
        }
        i = -1;
    }
    lastName.addEventListener("keyup", validateLastName);

    function validateContactNum()
    {
        if(parseInt(contactNum.value) !== Number || contactNum.value.length != 10)
        {
            const contactNumError = document.getElementById("contact-num-error");
            function createBubble()
            {
                contactNumError.innerHTML = "Enter 10 integers for your Contact Number!";
            }
            setTimeout(createBubble, 150);
            function deleteBubble()
            {
                contactNumError.style.display = "none";
            }
            setTimeout(deleteBubble, 5000);
        }
        i = -1;
    }
    contactNum.addEventListener("keyup", validateContactNum);

    if(i !== 1)
    {
        i = 1;
    }
}

function validate()
{
    if(i = -1)
    {
        return false;
    }
    else if(i == 0)
    {
        return false;
    }
    else
    {
        alert("Form submitted successfully!");
        return true;
    }
}

submitButton.addEventListener("click", validate);
